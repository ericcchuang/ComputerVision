name: Combined CI/CD Develop

on:
  push:
    paths:
      - "api/**"
      - ".github/workflows/workflows-dev.yml"
      - "ui/**"

jobs:
  android:
    if:
      false
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            ui/
            app/
            android/
            assets/
            node_modules/
            dist/
            package.json
            package-lock.json
            app.json
            app.config.js
            Dockerfile
            eas.json
            eslint.config.js

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Cache npm
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

      - name: npx expo prebuild
        run: npx expo prebuild --platform android
        env:
          CI: 1

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Set Gradlew Permissions
        run: chmod +x android/gradlew

      - name: Extract app version from app.json
        id: extract_version
        run: |
          echo "APP_VERSION=$(jq -r .expo.version app.json)" >> $GITHUB_ENV

      - name: Build application
        run: |
          cd android
          ./gradlew assembleRelease
        #  ./gradlew bundleRelease
        # ./gradlew clean

      - name: Debug APK build output
        run: ls -lh android/app/build/outputs/apk/release

      - name: Echo APK filename before renaming (debug)
        run: echo $(ls android/app/build/outputs/apk/release/*.apk)

      - name: Rename APK
        run: |
          mv android/app/build/outputs/apk/release/*.apk android/app/build/outputs/apk/release/android-computervision-${{env.APP_VERSION}}.apk

      - name: Echo APK filename after renaming (debug)
        run: echo $(ls android/app/build/outputs/apk/release/*.apk)

      - name: Upload application
        uses: actions/upload-artifact@v4
        with:
          name: android-computervision-${{env.APP_VERSION}}
          path: ui/android/app/build/outputs/apk/release/*.apk
          retention-days: 3

    #  - name: Upload application bundle
    #    uses: actions/upload-artifact@v4
    #    with:
    #      name: computervision-aab
    #      path: ui/android/app/build/outputs/bundle/release/app-release.aab
    #      retention-days: 3